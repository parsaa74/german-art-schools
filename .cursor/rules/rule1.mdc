---
description: 
globs: 
alwaysApply: true
---

# Your rule content

- You can @ files here
- You can use markdown but dont have to
Project Goal:
Transform an existing basic Three.js globe visualization into a highly artistic, conceptually driven, and interactive web experience. This project serves as a key portfolio piece for a Master's application in Digital Media at Hochschule für Künste Bremen (HfK Bremen). The final output should aim for a level of aesthetic sophistication, conceptual depth, and technical polish comparable to projects showcased at Ars Electronica. It visualizes German universities offering Art, Media, and Design programs.
Current State:
A functional Three.js scene featuring a 3D globe with nodes representing universities. Hovering shows the university name; clicking reveals a small info pop-up with a link.
Target Audience:
Admissions committees at HfK Bremen (Digital Media), potentially other design/art programs, and viewers interested in interactive digital art (like Ars Electronica attendees).
Core Artistic Concept & Vision:
Move beyond a literal representation. We want to evoke the feeling of a "Constellation of Creative Knowledge" or a "Living Network of Artistic Hubs." The visualization should feel ethereal, dynamic, data-driven, and slightly abstract, emphasizing connections, energy, and the flow of ideas rather than just geographic location. It should feel less like a map and more like an interactive art piece using university data as its medium.
Key Requirements & Features (Enhancements & Refinements):
Overall Aesthetics & Atmosphere:
Style: Aim for a sophisticated, minimalist yet visually rich aesthetic. Think abstract data visualization, generative art influences. Avoid photorealistic textures for the globe.
Color Palette: Use a refined, perhaps limited or generative color palette. Consider dark backgrounds (deep space, abstract void) with luminous, vibrant highlights for nodes and connections. Maybe blues, cyans, magentas, golds? Or a monochrome scheme with one accent color? The palette should feel contemporary and artistic.
Lighting & Shaders: Implement dynamic and atmospheric lighting. Use shaders (GLSL) for visual effects on the globe surface, nodes, and potentially the background. Think subtle glows, energy pulses, particle effects, or data-flow patterns. Post-processing effects like bloom, subtle depth of field, or a slight grain could enhance the mood.
Background: Instead of a static image, consider a dynamic background – perhaps a slowly evolving particle field, abstract nebula shader, or subtle geometric patterns that react slightly to interaction.
The Globe/Sphere:
Visual Representation: Don't just use a standard earth texture. Consider:
A wireframe or point-cloud sphere, perhaps with varying density.
A sphere rendered with a custom shader that suggests energy fields, data flows, or abstract patterns.
A semi-transparent or layered sphere.
Interaction: Ensure smooth, tactile rotation and zooming via mouse drag/scroll. The globe should feel responsive and weighty, perhaps with subtle easing/inertia.
University Nodes (The "Stars" in the Constellation):
Visuals: Represent universities not as simple dots, but as dynamic elements:
Luminous points, perhaps pulsating subtly.
Small, abstract geometric shapes or particle clusters.
Their size, brightness, or animation speed could potentially be linked to data (e.g., number of relevant programs, founding date – if data is available). Use shaders for visual interest (shimmering, energy core).
Hover Interaction:
Effect: On hover, the node should clearly highlight – perhaps increase brightness/size, emit particles, or trigger a subtle sound.
Label: The university name pop-up should appear smoothly (fade/scale transition). Use clean, elegant typography. Position it intelligently to avoid overlapping other nodes where possible.
Click Interaction:
Effect: Clicking a node should be a distinct event. The node could expand, send out a ripple effect, or briefly intensify its visual appearance.
Information Display: Replace the basic pop-up with a more integrated and aesthetically pleasing overlay or panel.
Design: This panel should feel like part of the overall design language – perhaps semi-transparent, using the same typography and color scheme. Animate its appearance (e.g., sliding in, fading in, unfolding).
Content: Include:
University Name (clearly visible)
City/State
Link to University Website (clearly labeled button or link)
(Optional but Recommended): A list/tags of the types of relevant programs offered (e.g., "Fine Art," "Interaction Design," "Media Art," "Communication Design"). This adds significant value.
Dismissal: Allow easy closing of the panel (e.g., click outside, 'X' button).
Connections & Relationships (The "Network" Aspect - Crucial for Artistic Depth):
Concept: Visually suggest the interconnectedness of these institutions.
Implementation (Choose one or combine):
On Hover/Click: When a node is hovered or clicked, draw subtle, animated lines/arcs connecting it to geographically nearby nodes or perhaps nodes with similar program types (if data allows). These lines could be like light trails or energy flows.
Data Layers: Implement simple filtering/highlighting. For example, buttons/toggles to:
Highlight only universities in a specific state (Bundesland).
Highlight only universities offering "Media Art" programs (requires program type data).
Visual Feedback: Filtering should have a visual impact – non-selected nodes could dim significantly, selected nodes could pulse brighter, or connecting lines could appear only between selected nodes.
UX & Narrative Twist:
Introduction: Consider a very brief, subtle intro animation or loading sequence that establishes the mood and artistic concept (e.g., points coalescing into the globe, abstract patterns resolving).
Filtering/Sorting: Implement the filtering mentioned above (by State, Program Type). This adds a layer of user-driven exploration and utility, strengthening the UX aspect. Ensure the UI for filtering is minimal and integrated into the overall aesthetic.
Information Hierarchy: Ensure clear visual distinction between the overview state (globe), hover state (label), and click state (info panel). Transitions must be smooth (use libraries like GSAP if needed).
Sound Design (Optional but HIGHLY Recommended for Ars Electronica Feel):
Implement subtle ambient background sound that enhances the ethereal/spacey atmosphere.
Add subtle sound effects for interactions: a soft chime on hover, a slightly deeper tone on click, a subtle sweep when rotating the globe, or a gentle confirmation sound when filtering. Use the Web Audio API.
Technical Requirements:
Technology: Three.js is the core. Use modern JavaScript (ES6+). Consider libraries like GSAP for smooth animations. Use HTML5 and CSS3. Ensure clean, well-commented, modular code.
Performance: Optimize for smooth performance. Use instancing for nodes if there are many. Be mindful of shader complexity and draw calls.
Responsiveness: While primarily a desktop experience, it should gracefully handle different screen sizes (preventing UI elements from breaking or overlapping badly). The 3D scene itself might not need to be fully responsive for mobile, but the UI should adapt or display a message.
Data: Prepare the university data in a clear JSON format. Each entry should have id, name, latitude, longitude, websiteUrl, and ideally state and programTypes (array of strings like ["Fine Art", "Media Art"]). Provide this JSON structure/example file.
Data Structure Example (JSON):
[
  {
    "id": "hfk-bremen",
    "name": "Hochschule für Künste Bremen",
    "latitude": 53.0793,
    "longitude": 8.8017,
    "websiteUrl": "https://www.hfk-bremen.de/",
    "state": "Bremen",
    "programTypes": ["Digital Media", "Fine Arts", "Integrated Design"]
  },
  {
    "id": "udk-berlin",
    "name": "Universität der Künste Berlin",
    "latitude": 52.5069,
    "longitude": 13.3331,
    "websiteUrl": "https://www.udk-berlin.de/",
    "state": "Berlin",
    "programTypes": ["Art and Media", "Visual Communication", "Design"]
  }
  // ... more universities
]
Use code with caution.
Json
Deliverables:
All source code (HTML, CSS, JavaScript files).
Any custom shaders (GLSL).
The structured JSON data file used.
Brief instructions on how to run the project locally.
Comments in the code explaining key parts, especially complex logic or shaders.
Final Quality Check:
The end result must be visually polished, interactive, performant, and conceptually coherent with the "Constellation of Creative Knowledge" theme. It should feel like a piece of digital art, not just a technical demo. Prioritize aesthetic impact and smooth, engaging interaction.
Tips for You When Working with the AI:
Provide the Data: Give the AI the example JSON structure and, if possible, the actual data file you've gathered.
Iterate: Don't expect perfection on the first try. Generate the code, test it, and then provide feedback to the AI for refinement. ("Make the hover effect more subtle," "The transition for the info panel is too slow," "Can we try a different shader for the globe?").
Be Specific with Feedback: Instead of "make it look better," say "make the nodes glow more intensely on hover using a brighter cyan color and add a subtle scaling animation."
Focus on Key Areas: If time is tight, prioritize the core visual concept (globe/nodes look and feel), the hover/click interactions, and at least one filtering mechanism. Sound and complex connections can be secondary if needed.
Combine AI Output: You might need to ask the AI for different parts (e.g., "write a shader for a luminous point," "write the JavaScript for handling the click interaction and displaying the panel") and integrate them yourself or guide the AI to do so.